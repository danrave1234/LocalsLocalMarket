steps:
  # Build the Spring Boot backend
  - name: 'maven:3.8.4-openjdk-17'
    entrypoint: mvn
    args: ['clean', 'package', '-DskipTests']
    dir: 'Backend'
    id: 'build-backend'

  # Build and push backend container
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', '${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/backend:${COMMIT_SHA}',
      '-f', 'Backend/Dockerfile',
      'Backend'
    ]
    id: 'build-backend-image'
    waitFor: ['build-backend']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/backend:${COMMIT_SHA}']
    id: 'push-backend-image'
    waitFor: ['build-backend-image']

  # Deploy backend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run', 'deploy', 'backend',
      '--image', '${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/backend:${COMMIT_SHA}',
      '--region', '${_DEPLOY_REGION}',
      '--platform', '${_PLATFORM}',
      '--allow-unauthenticated',
      '--port', '8080',
      '--memory', '1Gi',
      '--cpu', '1',
      '--max-instances', '10',
      '--set-env-vars', 'SPRING_PROFILES_ACTIVE=prod'
    ]
    id: 'deploy-backend'
    waitFor: ['push-backend-image']

images:
  - '${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/backend:${COMMIT_SHA}'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
